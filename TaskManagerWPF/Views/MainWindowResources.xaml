<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:TaskManagerWPF.ViewModels"
                    xmlns:vw="clr-namespace:TaskManagerWPF.Views"
                    xmlns:vms="clr-namespace:TaskManagerWPF.ViewModels.Single"
                    xmlns:vmm="clr-namespace:TaskManagerWPF.ViewModels.Many"
                    xmlns:vws="clr-namespace:TaskManagerWPF.Views.Single"
                    xmlns:vwm="clr-namespace:TaskManagerWPF.Views.Many"
                    >

    <DataTemplate DataType="{x:Type vm:TaskListViewModel}">
        <vw:TaskListView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vms:AddTaskViewModel}">
        <vws:AddTaskView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmm:UserListViewModel}">
        <vwm:UsersViewList/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vms:AddUserViewModel}" >
        <vwm:AddUser/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmm:ProjectListViewModel}" >
        <vwm:ProjectListView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vms:AddProjectViewModel}">
        <vws:AddProjectView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vms:TaskAssignmentViewModel}" >
        <vwm:TaskAssignmentControl/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmm:TaskDemandViewModel}">
        <vws:TaskDemandView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmm:UserProductivityViewModel}">
        <vwm:UserProductivityView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmm:CategoryListViewModel}">
        <vwm:CategoryListView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmm:TagListViewModel}">
        <vwm:TagListView/>
    </DataTemplate>

 
                  

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter DockPanel.Dock="Top" ContentSource="Header" />
                        <ContentPresenter ContentSource="Content" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Separate Style for TextBox Validation -->
    <Style TargetType="TextBox">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder/>
                        </Border>
                        <TextBlock Foreground="Red" FontSize="12" 
                               Text="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource AncestorType=AdornerDecorator}}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent, Mode=OneWay}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding DisplayName}" Command="{Binding Path=Command}" Margin="6" Padding="5" Background="LightBlue" BorderThickness="0"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>
   
    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel>
            <Button 
       Command="{Binding Path=CloseCommand}"
       Cursor="Hand"
       DockPanel.Dock="Right"
       Focusable="False"
       FontFamily="Courier" 
       FontSize="9"
       FontWeight="Bold"  
       Margin="15,1,0,0"
       Padding="0"
       VerticalContentAlignment="Center"
       VerticalAlignment="Center"
       Background="Transparent"
       BorderBrush="{x:Null}"
             
       >
                <!--zamykanie tabów ikonka-->
                <Image Source="pack://application:,,,/ViewResources/Icons/CloseIcon.png" Height="16" Width="16"  />
            </Button>
            <ContentPresenter 
       Content="{Binding Path=DisplayName}" 
       VerticalAlignment="Center" 
       />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding}"  
            ItemTemplate="{StaticResource ClosableTabItemTemplate}"
            Margin="4"
            />
    </DataTemplate>
    
</ResourceDictionary>